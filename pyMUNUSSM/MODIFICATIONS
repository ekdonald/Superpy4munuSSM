#########################################################################
#                                                                       #
""" S u p e r P y

    Finds regions of SUSY models' parameter spaces that are in
    best agreement with experimental data.
    Project: SuperPy.
    Author: Andrew Fowlie, KBFI, Tallinn.
    Version: 1.1
    Date: 05/2014

"""

	ADAPTATION TO MUNUSSM: Donald Kpatcha
	Date: 02/2024


##########################
###   MODIFICATIONS:   ###
##########################

    --------------------
    ### QUICK START: ###
    --------------------

	To run MultiNest you need to give its path, for example
        i) export LD_LIBRARY_PATH=/your/path/here/superpy-master-new/MultiNest-master/lib:$LD_LIBRARY_PATH
           or add that line to your .bashrc once and forever
        ii) or run "./run.sh" (mini script that contains the "export ..." command and "python SuperPy.py")
        iii) Set "InputFile" and "InputFileParameter" for the set up.

    ----------
    InputFile:
        i) Created "InputFile" for the model located into "superpy-master/SPhenomunuSSM/"
        ii) Set "True" or "False" if you want to use some specific subprogram, ex MicrOmegas, or if you want to take into 
            account in the likelihood calculation some specific constraint, ex relic density.
            For example if you set "True" MicrOmegas, and "False" the relic density constraint: MicrOmegas will run and 
            print the relic density calculated into the screen but it will not be consider by multinest for the likelihood analysis.
        iii) You can also choose to erase the auxiliary files generated by the subprograms, like MicrOmegas.
        iv) You can choose to show in the terminal, or not, several processes.
        v) This file is called at the beggining of "Likelihood.py"

    ---------------
    InputFileParam:
        i) Created "InputFileParam" for the model located into "superpy-master/pyMUNUSSM/"
        ii) Set "A", "B", "C" or "D" if you want to set your input parameters with diagonal matrixes or not.
            If diagonal, every entry of every matrix will be set to 0 (except neutrino Yukawa) and will not be taken by MultiNest as input.
            You can also set if the soft-breaking parameters inputs are T or A (e.g. T=A*Y).
        iii) This file is called at the beggining of "Priors.py"



    --------------------------
    ###   PARALLEL MAN:    ###
    --------------------------
    You need mpi4py package to use more cores. (https://mpi4py.readthedocs.io/en/stable/install.html)

    You need to install PyMultinest: see https://johannesbuchner.github.io/PyMultiNest/install
    pip install pymultinest    or you also have the folder /superpy-master-vX/PyMultiNest-master    
    into that folder: python setup.py install
    AFTER the install you need to install again Multinest (now this is automatically done in the 
    makefile of superpy, so this should be already done)

    Now run:
        run the program (o into ./run.sh)
             python SuperPy.py -> mpiexec -n 5 python SuperPy.py       where 5 is the number of cores you want
             python SuperPy.py -> mpirun -np 5 python SuperPy.py       also works         


    Modification to the 2 run.py files into ../PyMultiNest-master/
    
	#from mpi4py import MPI
	#libname = 'libmultinest_mpi.so'
	libname = 'libmultinest.so'
	try: # detect if run through mpiexec/mpirun
		from mpi4py import MPI
		if MPI.COMM_WORLD.Get_size() > 1: # need parallel capabilities
			libname = 'libmultinest_mpi.so'
	except ImportError:
		pass

	init_MPI = True -> init_MPI = False


    --------------------------
    ### EXTERNAL PROGRAMS: ###
    --------------------------

	i) SPheno to calculate the sprectrum, mixings, decays
	ii) higgstools (https://gitlab.com/higgsbounds/higgstools)
            software for comparing a wide class of BSM models to all available experimental results from 
            searches for new (scalar) particles and measurements of the 125 GeV Higgs boson at colliders. 
            We use it to compare the munussm predictions to the experimental observations.
	iii) MicrOmegas updated to version 4.3.4 (NOT YET. TODO next)
        iv) SModelS 1.1.1   (NOT YET) 
        v) DDCalc-1.1.0


    ----------------
	SPheno files:
        i) SPheno files generated with SARAH
	ii) "InputOutput_NMSSMplusRHN.f90" -> change the name of 2 Blocks (related to Higgs decay)
	     Those blocks can not be read by "pyslha.py"  (undone, all blocks as before, see Pyslha.py:)

    -----------------
	MicrOmegas files: NOT YET


    -------
    DDCalc:
        0) CAREFULL, there are 2 compiled files in the main folder of DDCalc-1.0.0. You have to delete them before "make all" 
        to avoid compatibility issues - UPDATED TO DDCalc-1.1.0 - UPDATED TO DDCalc_v2.0.0 Major changes in the 
        routines -> major changes in likelihood.py
        i) Added to calculate Log Likelihood from Direct Detection experiments to Likelihood.py
        ii) reads MicrOmegas output, takes LSP mass, SI and SD parameters and gives the loglikelihood for each experiment
        iii) added to InputFile, to select the experiment. You can select the Efficiency files you want to calculate and 
        show on screen and also you can select the which ones are going to be passed to MultiNest as constraint.


    ------------------
    ### .PY FILES: ###
    ------------------

    ----------
    Pyslha.py:  --> pyslha213mod.py
        i) The file that is called by Likelihood.py is located in "superpy-master/pyslha-2.1.3/build/lib.linux-x86_64-2.7/pyslha.py" 
           --> RENAME to "pyslha213mod.py", every function called in Likelihood.py was also renamed.
        ii) Commented into "class Block(object):" -> "def set_value(self, *args):".
            Remember to compile pyslha again if you want to modify this file.
        iii) Commented the same lines into "superpy-master/pyslha-2.1.3/pyslha.py" just in case ...

    NOTE: THERE ARE 2 VERSION USED OF THIS PACKAGE. 
        version 2.1.3 with modifications, in "/home/usuario/.local/lib/python*.*/site-packages/pyslha.pyc", 
        used by the main script to read the SPheno output file.
        version 3.2.0 in "/usr/local/lib/python*.*/dist-packages/pyslha.pyc", used by "SModelS". 
            To import specific version:
        a) import sys
        b) sys.path.insert(0, '/home/user/.local/lib/python*.*/site-packages/' or '/usr/local/lib/python*.*/dist-packages/')
        c) import pyslha213mod or pyslha
        d) check the version: pyslha.__version__ ; check the path: print pyslha.__file__   or pyslha213mod

    -----------
    In Debug.py
	i) Huge problem with SPheno so: Debug = True -> False. Stack size problem???
	ii) "NullWriter()" commented to be able to watch the proccess

    -----------------------------------------------------
    In MNOptions.py, Cube.py, Likelihood.py and Priors.py
	i) CMSSMConstraintTracker, CNMSSMModelTracker, etc  CNMSSM -> NMSSMplusRHN 

    ----------------
    In Priors.py 
	i) added every parameter as input for the model at SUSY scale (input for SPheno)
        ii) parameter values taken from "InputFileParam"
        iii) added "NegLogParameter" to be able to set as input a parameter with a log prior, for negative values.

    ----------------
    In Likelihood.py
	i) "import shutil" added
	ii) constraints not used commented
	iii) relic density value updated (Planck 2015)
	iv) external programs not used in "def SetPredictions(self):" commented; 
	v) SPheno added in "def nmssmplusrhn(self):"
	vi) "def writeslha" modified to account for all the NMSSMplusRHN parameters at SUSY scale (input for SPheno)
	vii) "def readslha" modified to consider the correct number of masses in MUNUSSM
	viii) "def micromegas(self, input_file):" modified to use SPheno as input
	ix) added "def RunProgramSPheno" Run SPheno: 1) copy its output to the temporary file; 2) copy temporary 
	    file to the MicrOmegas folder (not needed, temporary file is the input); 3) copy temporary file 
	    (but deletes 2 problematic lines) to SModelS inputFiles folder to use it as input
	x) added "def RunProgramMicrOmegas" to run MicrOmegas
        xi) added at the beggining the scrip to read InputFile -> ReadInputFile and the constraints
        xii) added if in every external program and constraint to be executed if set 'True' in InputFile
        xiii) added "def ReadParameterMiddle" to select parameter from a file
        xiv)  added "def RunProgramDDCalc" and 2, 3, to run DDCalc. 2 and 3 handle all the posible efficiency 
              files at once. 3 do it without creating a temporary file for every efficiency file.

        -) Added rutine to calculate neutrino physics observables: mass diff, mixing angles and mass sum.
        -) Added rutine to get other observables calculated by SPheno, e.g.: gm2, bsg, etc

	Shut down flags (spheno input slha file) :
	 38 0               # 1- or 2-Loop RGEs 
	 75 0               # Write WHIZARD files 
	 76 0               # Write HiggsBounds file 
	 530 0              # Write Blocks for Vevacious

    ---------------
	In MNOptions.py
	i) renamed output files "outputfiles_basename = os.path.abspath('./chains/munuSSM')"
	ii) corrected the number of parameters in "n_params" to match the amount of NMSSMplusRHN's parameters
        iii) # Resume from unfinished run.  resume = False -> resume = True     to be able to continue a scan that was stopped




"""
#                                                                       #
#########################################################################
